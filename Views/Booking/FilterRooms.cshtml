@model dynamicHotelRate
@{
    ViewData["Title"] = "IndexRoom";
    var adults = myVar.numberAdults;
    var dateFrom = myVar.TempBooking.DateFrom;
    var dateTo = myVar.TempBooking.DateTo;
    var ListDate = myVar.ListDate;
    GrotHotel.myVar.Index = 0;
}
<div class="m-3">
    <h4 class="text-center  bg-light">
        <small>@Model.Hotel.HotelRooms.Count() rooms available on </small>
        @Model.Hotel.HotelName
    </h4>

    @foreach (var item in Model.Hotel.HotelRooms)
    {
        <div class="d-flex border m-3 rounded" style="width:80%">
            <div class="col p-3">
                <img src="~/Images/RoomImages/@item.RoomPicture" style="width:200px;" />
            </div>
            <div class="col m-2 p-2" style="flex-grow:3">
                <div class="row">
                    <div class="col" style="flex-basis: 60%;">
                        <h5 class="text-primary mt-1">@item.Title</h5>
                        <h5 class="mt-3">
                            Rate <b>
                                <small style="color:red;">
                                    @Model.RoomRates.ElementAtOrDefault(myVar.Index)?.Rate
                                </small>
                            </b>
                        </h5>
                        @{
                            var descriptions = myVar.DiscriptionFormat(item.Description);
                            var rowCount = (int)Math.Ceiling((double)descriptions.Count / 3);
                        }
                        @for (int i = 0; i < rowCount; i++)
                        {
                            <div class="row pt-3" style="width: 400px;">
                                @for (int j = i * 3; j < Math.Min((i + 1) * 3, descriptions.Count); j++)
                                {
                                    <div class="col">
                                        <small>@descriptions[j]</small>
                                    </div>
                                }
                            </div>
                        }
                        <hr />
                        <div class="d-flex mt-1">
                            @for (DateTime date = dateFrom; date <= dateTo && date <= dateFrom.AddDays(6);
                           date = date.AddDays(1))
                            {
                                var isBlackoutDate = ListDate.Contains(date.ToString("yyyy-MM-dd"));

                                if (@Model.RoomRates.ElementAtOrDefault(myVar.Index).DateFrom <= dateTo &&
                                @Model.RoomRates.ElementAtOrDefault(myVar.Index).DateTo >= dateFrom
                                )
                                {
                                    <div class="p-1">
                                        <p>@date.ToString("dddd")</p>
                                        @if (isBlackoutDate)
                                        {
                                            <span>N/A</span>
                                        }
                                        else
                                        {
                                            <span style="transform: rotate(1deg);">
                                                @Model.RoomRates.ElementAtOrDefault(myVar.Index)?.Rate
                                            </span>
                                        }
                                        <span style="transform: rotate(1deg);">
                                    </div>
                                }
                            }

                        </div>
                    </div>
                        <button type="button" class="btn btn-danger" style="width:60px;height:100px;">Book</button>
                </div>
            </div>
        </div>
        GrotHotel.myVar.Index++;
    }
</div>
